<?php defined('SYSPATH') OR die('No direct access allowed.');
/**
 * Leaf Html DBGridview class
 *
 * @package    Html

 * @copyright  (c) 2010
 */
class Leafx2_Html_Dbgridview extends Leafx2_Html_Gridview {
    
    // sql statement for the grid
    private $sql;
    // sorting
    private $sorter;


    public function __construct($name,$sql) {
        $this->name = $name;
        $this->sql = $sql;
    }

    /**
     * add sorting fields
     * @param array sorting field
     * @return void
     */
    public function sorts($arr) {
        if (is_array($arr)) $this->sorter = $arr;
        else $this->sorter = array();
    }
    
    
    public function get_data($options = null) {
        // check if we have to display all rows
        if (isset($_GET["page".$this->name."_sar"]) && $_GET["page".$this->name."_sar"] == 1) {
		   $this->is_display_all_rows = 1;
		}
		
		// hitung jumlah row
        // hilangkan clause "where"
        $idx = strpos(strtolower($this->sql)," where ");
        if ($idx !== false) {
            $part1 = substr($this->sql,0,$idx);
            $part2 = substr($this->sql,$idx);

            $idx2  = strpos(strtolower($part2)," order by ");
            $part2 = $idx2 !== false? substr($part2,0,$idx2) : $part2;
        }
        else {
            $part1 = $this->sql;
            $idx2  = strpos(strtolower($part1)," order by ");
            $part1 = $idx2 !== false? substr($part1,0,$idx2) : $part1;
            $part2 = "";
        }
        //$sql   = eregi_replace('extract\(([[:alpha:]]+) from ([[:alnum:][:punct:]]+)','',$part1);
        $sql = $part1;
        $sql   = str_replace(substr($sql,0,strpos(strtolower($sql)," from ")),'select count(*) as counter',$sql) . $part2;

        $db = LeafX2_Db::instance($options["db_instance"]);
        try {
            $res = $db->query($sql);
        }
        catch (Exception $e) {
            Leafx2::invoke_error("Error in grid data count");
        }
       
        if (strpos(strtolower($sql)," group by ") !== FALSE) {
            // grid using data from grouping
            $this->total_rows = count($res);
        }
        else {
            // without grouping
            $this->total_rows = $res[0]->counter;
        }
        // prepare the grid
        $this->prepare_grid();
        // set sorting
        $this->sql .= $_GET["gvsf"] != ""? " order by ".$_GET["gvsf"].($_GET["gvso"] == "DESC"? " DESC" : " ASC") : "";
        // retrieving data
        $sql = $this->sql . ($this->is_display_all_rows? "" : " limit $this->displayed_rows offset $this->start");
        try {
            $res = $db->query($sql);
        }
        catch (Exception $e) {
            Leafx2::invoke_error("Invalid grid sort-field name");
        }

        // manipulating, supaya bisa diakses by index
        $i = $this->start;
        $j = 0;
        $ret = array();
        while ($i < $this->end) {
            $ret[$i++] = $res[$j++];
        }
        unset($res);
        return $ret;
    }

    /**
     * get html table header
     * @return string html
     */
    protected function get_html_header() {
        $buffer = "<thead>";
        $header_idx = 0;
        foreach ($this->headers as $header) {
            $idx = 0;
            $buffer .= "\n<tr class='gv-header-row'>";
            foreach ($header as $key => $value) {
                if ($this->sorter[$idx] != null && $this->sorter[$idx] != "" && $header_idx == 0) {
                    $sort1 = "<a href='".Leafx2::$baseaction.$this->get_sort_url($this->sorter[$idx])."'>";
                    $sort2 = "&nbsp;<i class='icon-double-angle-".($_GET["gvsf"] == $this->sorter[$idx]? ($_GET["gvso"] == "ASC"? "up" : "down") : "down") ."'></i></a>";
                }
                else {
                    $sort1 = "";
                    $sort2 = "";
                }
                //check if header has html attributes
                //if key is integer(generated by php), then header dont have attributes
                if (is_integer($key)) {	//no attributes
                    // so caption = value
                    $buffer .= "\n\t <th>$sort1$value$sort2</th>";
                }else {	//header with attributes
                    // so caption = key, attribute = value
                    $buffer .= "\n\t <th $value >$sort1$key$sort2</th>";
                };
                $idx++;
            }
            $buffer .= "\n</tr>";
            $header_idx++;
        }
        $buffer .= "</thead>";
        return $buffer;
    }
        
    protected function get_html_row() {
        $buffer = "<tbody>";
        $flip = 1;
        $i = 0;
        foreach ($this->rows as $row) {
            if ($flip){ 
    			//$class = 'class="oddGridRow"';
    			$trClass = 'class="odd-row"';
    			$flip = 0;
    		}else {
    			//$class = 'class="evenGridRow"';
    			$trClass = 'class="even-row"';
    			$flip = 1;
    		}
    		$buffer .= "\n<tr $trClass>";

    		foreach ($row as $key => $val) {
    		    if (@$this->rowsinfo[$i]["rowtype"] == "th")
    		        $rowtype = "th";
    		    else
           		    $rowtype = "td";
    		    if (is_integer($key))
			        $buffer .= "\n\t <$rowtype $class valign=\"top\" >$val</$rowtype>";
			    else 
			        $buffer .= "\n\t <$rowtype $class valign=\"top\" $val>$key</$rowtype>";
    		}
    		$buffer .= "\n</tr>";
    		$i++;
        }
        $buffer .= "</tbody>";
        return $buffer;
    }

    /**
     * get sort url
     * @param string field name
     * @return void
     */
    protected function get_sort_url($fname) {
        $url = "";
        if (count($_GET) > 0) {
            $first = true;
            $keyexist = false;
            foreach ($_GET as $key => $val) {
                if ($key == "gvsf") {
                    $val = $fname;
                    $keyexist = true;
                }
                if ($key == "gvso") {
                    if ($_GET["gvsf"] == $fname)
                        $val = $val == "DESC"? "ASC" : "DESC";
                    else $val = "ASC";
                }
                $key = $this->sanitize_url($key);
                $url .= $key == ""? "" : ($first? "?" : "&")."$key=$val";
                $first = false;
            }
            if (!$keyexist)
                $url .= "&gvsf=$fname&gvso=ASC";
        }
        else $url = "?gvsf=$fname&gvso=ASC";

        return $url;
    }

} // End 
    